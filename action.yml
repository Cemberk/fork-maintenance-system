name: "Fork Maintenance System"
description: "A GitHub Action to maintain forked repositories by checking for misspellings, resolving merge conflicts, running regression triage, and providing code suggestions."
author: "Cemberk"
inputs:
  github_token:
    description: "GitHub token for authentication"
    required: true
  upstream_repo:
    description: "URL of the upstream repository"
    required: true
  upstream_branch:
    description: "Branch of the upstream repository to merge from"
    required: true
  internal_branch:
    description: "Branch for internal cadence"
    required: true
  pr_branch_prefix:
    description: "Prefix for the PR branch name"
    required: true
#  regression_triage_test_script:
#    description: "triage script for unit tests"
#    required: true
runs:
  using: "composite"
  steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Git
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
      shell: bash
    
    - name: Add upstream remote
      run: |
        git remote add upstream ${{ inputs.upstream_repo }}
      shell: bash
    
    - name: Fetch upstream changes
      run: git fetch upstream
      shell: bash
    
    - name: Create new branch
      run: |
        git checkout -b ${{ inputs.pr_branch_prefix }}-$(date +%Y%m%d)
      shell: bash
    
    - name: Attempt to merge upstream branch
      run: |
        git merge upstream/${{ inputs.upstream_branch }} || true
      shell: bash

    - name: Check for merge conflicts
      id: check_conflicts
      run: |
        if git ls-files -u | grep -q '^'; then
          echo "Merge conflicts detected."
          echo "conflicts=true" >> $GITHUB_ENV
        else
          echo "No merge conflicts."
          echo "conflicts=false" >> $GITHUB_ENV
      shell: bash

    - name: Commit merge
      run: |
        git add .
        git commit -m "Merged upstream changes from ${{ inputs.upstream_branch }} into ${{ inputs.pr_branch_prefix }}"
        git push origin HEAD:${{ inputs.pr_branch_prefix }}-$(date +%Y%m%d)
      shell: bash
    
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v4
      with:
        token: ${{ inputs.github_token }}
        base: ${{ inputs.internal_branch }}
        head: ${{ inputs.pr_branch_prefix }}-$(date +%Y%m%d)
        title: "Automated PR: Merge upstream/${{ inputs.upstream_branch }} into ${{ inputs.internal_branch }}"
        body: "This PR was created automatically by the Fork Maintenance System to merge changes from upstream/${{ inputs.upstream_branch }} into ${{ inputs.internal_branch }}."
        draft: false

    - name: Run reviewdog to suggest conflict resolutions
      if: env.conflicts == 'true'
      uses: reviewdog/action-suggester@v1
      with:
        github_token: ${{ inputs.github_token }}
        tool_name: 'merge-conflict-suggester'
        level: 'warning'
        filter_mode: 'diff_context'
        fail_on_error: 'false'
        cleanup: 'true'


#    - name: Run regression triage
#      run: |
#        chmod +x ${{ inputs.regression_triage_test_script }}
#        ./${{ inputs.regression_triage_test_script }}
#      env:
#        GITHUB_TOKEN: ${{ inputs.github_token }}
